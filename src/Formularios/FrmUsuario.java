/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Formularios;

import Modelo.UsuarioDAO;
import Conexion.Conexion;
import Modelo.Usuarios;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Aron
 */
public class FrmUsuario extends javax.swing.JInternalFrame {

    UsuarioDAO ad = new UsuarioDAO();
    int op;
    Conexion cx = new Conexion();
    Connection cn = cx.coneccion();
 DefaultTableModel modelo = new DefaultTableModel();
  DefaultListModel modelolista =  new DefaultListModel();
  ArrayList<Usuarios> lista = new ArrayList();
    public FrmUsuario() {
        initComponents();
        mostrarFechaHora();
        setLocation(400, 100);
      //listarUser();
       mostrarDatos("");
        txtCOD.setEnabled(false);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnAgregar.setEnabled(false);
        habilitar();
        
    }
    

    void mostrarDatos(String valor)
    {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("USUARIO");
        modelo.addColumn("PASSWORD");
        jDatosUs.setModel(modelo);
        String sql ="";
        if(valor.equals(""))
        {
            sql="SELECT * FROM usuario";
        }
        else{
            sql="SELECT * FROM usuario WHERE usuario='"+valor+"'";
        }
        String [] datos = new  String [4];
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next())
            {
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                modelo.addRow(datos);
            }
            jDatosUs.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(FrmUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jModificar = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        txtCOD = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        txtContra = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jDatosUs = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        btnMostrarDatos = new javax.swing.JButton();

        jModificar.setText("MODIFICAR");
        jModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jModificarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jModificar);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("GESTION DE USUARIO");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("datos de usuario"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("PASSWORD:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel2.setText("USUARIO");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsuarioKeyPressed(evt);
            }
        });
        jPanel1.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 160, -1));

        txtCOD.setEnabled(false);
        jPanel1.add(txtCOD, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 110, 30));

        jLabel1.setText("CODIGO:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        lblFecha.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(lblFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 180, 30));

        txtContra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtContraKeyPressed(evt);
            }
        });
        jPanel1.add(txtContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 160, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 480, 160));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("LISTADO DE USUARIOS"));

        jDatosUs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jDatosUs.setComponentPopupMenu(jPopupMenu1);
        jDatosUs.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jDatosUs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDatosUsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jDatosUs);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 410, 190));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar.jpg"))); // NOI18N
        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, -1, 60));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ELIMINAR.gif"))); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 420, -1, 60));

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/MODIFICAR.gif"))); // NOI18N
        btnModificar.setText("MODIFICAR");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        getContentPane().add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, -1, 60));

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/NUEVO.gif"))); // NOI18N
        btnNuevo.setText("NUEVO");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 90, 60));

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SALIR.gif"))); // NOI18N
        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 420, 90, 60));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, -1, -1));
        getContentPane().add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 230, -1));

        btnMostrarDatos.setText("MOSTRAR DATOS");
        btnMostrarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarDatosActionPerformed(evt);
            }
        });
        getContentPane().add(btnMostrarDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 190, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsuarioKeyPressed
        int key= evt.getKeyCode();
        if(key==KeyEvent.VK_ENTER)
        {
            if(!txtUsuario.getText().equals("")){
                op = ad.verificarUsuario(txtUsuario.getText());
                if(op==1){
                    JOptionPane.showMessageDialog(null,"USUARIO EXISTE" );
                    txtUsuario.setText(null);
                    txtUsuario.requestFocus();
                }else{
                    JOptionPane.showMessageDialog(null,"USUARIO NO EXISTE" );
                    txtContra.requestFocus();
                }
            }
        }
    }//GEN-LAST:event_txtUsuarioKeyPressed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
       // ad.registrarUsuario(txtUsuario.getText(),jpas.getPassword().toString());
         if(txtUsuario.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Deve ingresar un usuario");
            txtUsuario.requestFocus();
        }else if (txtContra.getText().equals("")){
        JOptionPane.showMessageDialog(null,"Deve ingresar un Password");
            txtContra.requestFocus();
       }else{
        try {
            //int COD= Integer.parseInt(txtcod.getText());
            //int TOTAL= Integer.parseInt(txtc.getText());
            PreparedStatement pst = cn.prepareStatement("INSERT INTO  usuario(usuario,clave) VALUES (?,?)");
           // pst.setString(1, txtcod.getText());
            pst.setString( 1 , txtUsuario.getText());//cboTP.getSelectedItem().toString());
            pst.setString( 2 , txtContra.getText().toString());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"REGISTRADO");
            mostrarDatos("");
            txtCOD.setText(null);
            txtUsuario.setText(null);
            txtContra.setText(null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error"+e);
        }
    }/* 
                
        String usuario = txtUsuario.getText();
        String clave = new String(txtContra.getText());
        op = ad.registrarUsuario(usuario, clave);
        limpiar();
        if(op!=0){
            JOptionPane.showMessageDialog(null,"Usuario registrado!");
            updateComponets();            
            btnAgregar.setEnabled(false);
        }else{
            JOptionPane.showMessageDialog(null,"Usuario no registrado!");
        }
            
       */ 
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        mostrarDatos(txtBuscar.getText());
       
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnMostrarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarDatosActionPerformed
        mostrarDatos("");
        txtBuscar.setText(null);
    }//GEN-LAST:event_btnMostrarDatosActionPerformed

    private void jModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jModificarActionPerformed
        btnModificar.setEnabled(true); 
        txtCOD.setEnabled(false);
        int fila= jDatosUs.getSelectedRow();
        if(fila>=0)
        {
            txtCOD.setText(jDatosUs.getValueAt(fila,0).toString());
            txtUsuario.setText(jDatosUs.getValueAt(fila,1).toString());
            txtContra.setText(jDatosUs.getValueAt(fila,2).toString());
        }
        else
        {
            JOptionPane.showMessageDialog(null,"NO SELECCIONO FILA");
        }
        
        
    }//GEN-LAST:event_jModificarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
     
        
        int confirmar=JOptionPane.showConfirmDialog(null, "Esta seguro que desea Usuario Los datos? "); 
        if(JOptionPane.OK_OPTION==confirmar) {
            try {
                PreparedStatement pst= cn.prepareStatement("UPDATE  usuario  SET usuario='"+txtUsuario.getText()+"',clave='"+txtContra.getText()+"'WHERE idUsuario='"+txtCOD.getText()+"'");
                pst.executeUpdate();
                mostrarDatos("");
                JOptionPane.showMessageDialog(null, "Usuario MODIFICADO!");
                txtCOD.setText(null);
                txtBuscar.setText(null);
                txtContra.setText(null);
                txtUsuario.setText(null);
            } catch (SQLException ex) {
                Logger.getLogger(FrmUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
               JOptionPane.showMessageDialog(null, "Datos del Usuario no se ha MODIFICADO!");      
        }
        
      /*
         int fil = jDatosUs.getSelectedRow();
        if(fil<0){
            JOptionPane.showMessageDialog(null, "Seleccionar El Uusario a MODIFICAR!");
        }else{
            int confirmar=JOptionPane.showConfirmDialog(null, "Esta seguro que desea Usuario Los datos? "); 
            if(JOptionPane.OK_OPTION==confirmar) {
                   int id = Integer.parseInt(txtCOD.getText());
                   
                    String usuario = txtUsuario.getText();
                    String clave = txtContra.getText();//new String(txtclave.getPassword());
                    
                    int x = ad.modificarUsuario(id,usuario,clave);
                    if(x==1){
                        JOptionPane.showMessageDialog(null, "Usuario MODIFICADO!");
                        updateComponets();
                        limpiar();
                        btnEliminar.setEnabled(false);
                        btnModificar.setEnabled(false);
                        btnAgregar.setEnabled(false);
                        inabilitar();
                    }else{
                        JOptionPane.showMessageDialog(null, "Datos del Usuario no se ha MODIFICADO!");      
                    }                   
            }  
        
        }
       
         */
        
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
       int fila = jDatosUs.getSelectedRow();
        String cod="";
        
        cod=jDatosUs.getValueAt(fila,0).toString();
         int confirmar=JOptionPane.showConfirmDialog(null, "Esta seguro que desea ELIMINAR el Usuario? "); 
            if(JOptionPane.OK_OPTION==confirmar) {
                try {
                    PreparedStatement pst= cn.prepareStatement("DELETE FROM usuario WHERE idUsuario='"+cod+"'");
                    pst.executeUpdate();
                    mostrarDatos("");
                    JOptionPane.showMessageDialog(null, "Usuario ELIMINADO!");
                } catch (Exception e) {
                }
            }else{
                        JOptionPane.showMessageDialog(null, "Usuario no ELIMINADO!");      
                    }
       txtCOD.setText(null);
       txtBuscar.setText(null);
       txtContra.setText(null);
       txtUsuario.setText(null);
       
              
          /*int fila = jDatosUs.getSelectedRow();
        if(fila<0){
            JOptionPane.showMessageDialog(null, "Seleccionar El Usuario a ELIMINAR");            
        }else{
            int confirmar=JOptionPane.showConfirmDialog(null, "Esta seguro que desea ELIMINAR el Usuario? "); 
            if(JOptionPane.OK_OPTION==confirmar) {
                    int celda = (int) jDatosUs.getValueAt(fila, 0);
                    int x = ad.eliminarUsuario(celda);
                    if(x==1){
                        JOptionPane.showMessageDialog(null, "Usuario ELIMINADO!");
                        updateComponets();
                        limpiar();
                    }else{
                        JOptionPane.showMessageDialog(null, "Usuario no ELIMINADO!");      
                    }                   
            } 
            
        }*/
         
                  
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        txtCOD.setText(null);
        txtUsuario.setText(null);
        txtContra.setText(null);
        txtBuscar.setText(null);
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(true);
        inabilitar();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtContraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContraKeyPressed
         int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            String xt =txtContra.getText(); //new String(txtclave.getPassword());
            if(xt.equals("")){
                txtContra.requestFocus();
            }else{
                btnAgregar.setEnabled(true);
                btnAgregar.requestFocus();
            }
        }
    }//GEN-LAST:event_txtContraKeyPressed

    private void jDatosUsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDatosUsMouseClicked
       int fila=jDatosUs.rowAtPoint(evt.getPoint());
        txtCOD.setText(jDatosUs.getValueAt(fila,0).toString());
        //txtIdEquipo.setText(jtDatos.getValueAt(fila,1).toString());
        txtUsuario.setText(jDatosUs.getValueAt(fila,1).toString());
        txtContra.setText(jDatosUs.getValueAt(fila,2).toString());
        
        btnAgregar.setEnabled(false);
        btnEliminar.setEnabled(true);
        btnModificar.setEnabled(true);
               
               
    }//GEN-LAST:event_jDatosUsMouseClicked
    void limpiar(){
    txtCOD.setText(null);
    txtUsuario.setText(null);
    txtContra.setText(null);
    }
 void updateComponets(){
            LimpiarTabla(modelo);
            listarUser();
            //modelocombo.removeAllElements();
            //cargarCombo();
           // modelolista.clear();
            //cargarList();    
    }
 void LimpiarTabla(DefaultTableModel modelo){
        int a =modelo.getRowCount()-1;
        for(int i=a;i>=0;i--){  
            modelo.removeRow(i);
        }
 }
 void listarUser(){
    lista = ad.listarUsuario();
    modelo = (DefaultTableModel) jDatosUs.getModel();
        Object[] usu = new Object[4];
        for(int i=0;i<lista.size();i++){
            usu[0]=lista.get(i).getIdusuario();
            usu[1]=lista.get(i).getUsuario();
            usu[2]=lista.get(i).getClave();
            modelo.addRow(usu);
        }        
        jDatosUs.setModel(modelo);
}
 void cargarList(){
   
    lista = ad.listarUsuario();
    //lsUsuario.setModel(modelolista);
        for(int i=0;i<lista.size();i++){
            modelolista.addElement(lista.get(i).getUsuario());
      //      lsUsuario.setModel(modelolista);
        }
    
 }
    void mostrarFechaHora(){
   
   Calendar Cal= Calendar.getInstance();
String fec= Cal.get(Cal.DATE)+"/"+(Cal.get(Cal.MONTH)+1)+"/"+Cal.get(Cal.YEAR)+" "+Cal.get(Cal.HOUR_OF_DAY)+":"+Cal.get(Cal.MINUTE)+":"+Cal.get(Cal.SECOND);
   lblFecha.setText(fec);
}
void habilitar()
{
    txtBuscar.setEnabled(false);
    txtCOD.setEnabled(false);
    txtContra.setEnabled(false);
    txtUsuario.setEnabled(false);
}
void inabilitar()
{
    txtBuscar.setEnabled(true);
    //txtCOD.setEnabled(true);
    txtContra.setEnabled(true);
    txtUsuario.setEnabled(true);
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnMostrarDatos;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JTable jDatosUs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jModificar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCOD;
    private javax.swing.JTextField txtContra;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
